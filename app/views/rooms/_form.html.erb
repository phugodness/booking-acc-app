  <%= form_for room, :html => { :multipart => true } do |f| %>
    <% if room.errors.any? %>
    <div id="error_explanation">
      <h2><%= pluralize(room.errors.count, "error") %> prohibited this room from being saved:</h2>

      <ul>
        <% room.errors.full_messages.each do |message| %>
        <li><%= message %></li>
        <% end %>
      </ul>
    </div>
    <% end %>
    <div class="row">
      <div class="col-md-6">
        <%= f.label :type_of_room_id %>
        <%= f.select :type_of_room_id, @type_of_room.collect{ |u| [u.name, u.id]} %>
      </div>
      <div class="col-md-6">
        <%= f.label :number_of_room %>
        <%= f.number_field :number_of_room, value: f.object.number_of_room %>
      </div>
    </div>

    <div class="row">
      <div class="col-md-6">
          <%= f.label :name %>
          <%= f.text_field :name %>
      </div>
      <div class="col-md-6">
        <%= f.label :address %>
        <%= f.text_field :address %>
      </div>
    </div>

    <%= f.fields_for :amentity do |builder| %>
    <div class="row">
      <div class="col-md-3">
        <div class="">
          <%= builder.check_box :internet %>
          Internet
        </div>

      </div>
      <div class="col-md-3">
        <div class="">
          <%= builder.check_box :air_conditioning %>
          air_conditioning
        </div>

      </div>
      <div class="col-md-3">
        <div class="">
          <%= builder.check_box :cable_tv %>
          cable_tv
        </div>

      </div>
      <div class="col-md-3">
        <div class="">
          <%= builder.check_box :breakfast %>
          breakfast
        </div>

      </div>
    </div>
    <div class="row">
      <div class="col-md-3">
        <div class="">
          <%= builder.check_box :parking %>
          parking
        </div>

      </div>
      <div class="col-md-3">
        <div class="">
          <%= builder.check_box :elevator %>
          elevator
        </div>

      </div>
      <div class="col-md-3">
        <div class="">
          <%= builder.check_box :heating %>
          heating
        </div>

      </div>
      <div class="col-md-3">
        <div class="">
          <%= builder.check_box :hot_tub %>
          hot_tub
        </div>

      </div>
    </div>
    <% end %>

    <div class="row">
      <div class="col-md-6">
        <%= f.label :number_of_guest %>
        <%= f.text_field :number_of_guest %>
      </div>
      <div class="col-md-6">
        <%= f.label :price %>
        <%= f.text_field :price %>
      </div>
    </div>
    <div class="row">
      <div class="col-md-6">
        <%= f.label :number_of_bed %>
        <%= f.text_field :number_of_bed %>
      </div>
      <div class="col-md-6">
        <%= f.label :accomodates %>
        <%= f.text_field :accomodates %>
      </div>
    </div>

    <div class="row">
      <div class="col-md-12">
        <%= f.label :description %>
        <%= f.text_area :description %>
      </div>
    </div>

    <div class="row">
      <div class="col-md-12">
        <%= f.label :house_rules %>
        <%= f.text_area :house_rules %>
      </div>
    </div>

    <div class="row">
      <div class="col-md-12">
        <%= f.submit %>
      </div>
    </div>
    <% end %>
    <%= form_for(@image_room, html: { multipart: true, class: "dropzone", id: 'edit_image_room'}) do |f|  %>
    <div class="fallback">
      <%= f.file_field :image %><br>
      <%= f.submit "Upload" %>
    </div>
    <%= hidden_field_tag 'image_room[room_id]', @room.id, class: 'room_id'%>
    <% end %>

<script type="text/javascript">

  $("#edit_image_room").dropzone({
    init: function() {
      this.on("sending", function(file, xhr, formData) {
        formData.append("image_room[room_id]", $('.room_id').val()); // Append all the additional input data of your form here!
      });
      // var mockFile = { name: "banner2.jpg", size: 12345 };
      // this.emit("addedfile", mockFile);
      // this.emit("thumbnail", mockFile, 'http://localhost:3001/system/uploads/images/000/000/058/original/1493720956430_Screenshot_from_2017-05-01_23-43-17.png');
      // this.files.push(mockFile);
      // $(".dz-remove").attr("id", 58);
      thisDropZone = this
      $.getJSON("/rooms/images/" + $('.room_id').val(), function(data) {
       $.each(data, function(index, val) {
           var mockFile = { name: val.image_file_name, size: val.image_file_size };
           thisDropZone.emit("addedfile", mockFile);
           thisDropZone.emit("thumbnail", mockFile, val.url_medium);
           thisDropZone.emit("complete", mockFile);

           $(".dz-remove").eq(index).attr("id", val.id);
        });
    });

    },
    renameFilename: function (filename) {
      return new Date().getTime() + '_' + filename;
    },
    // restrict image size to a maximum 1MB
    maxFilesize: 1,
    // changed the passed param to one accepted by
    // our rails app
    paramName: "image_room[image]",
    // show remove links on each image upload
    addRemoveLinks: true,
    // if the upload was successful
    success: function(file, response){
      // find the remove button link of the uploaded file and give it an id
      // based of the fileID response from the server
      $(file.previewTemplate).find('.dz-remove').attr('id', response.fileID);
      // add the dz-success class (the green tick sign)
      $(file.previewElement).addClass("dz-success");
    },
    //when the remove button is clicked
    removedfile: function(file){
      // grap the id of the uploaded file we set earlier
      var id = $(file.previewTemplate).find('.dz-remove').attr('id');

      // make a DELETE ajax request to delete the file
      $.ajax({
        type: 'DELETE',
        url: '/image_rooms/' + id,
        success: function(data){
          alert(data.message);
          location.reload();
        }
      });
    }
  });
</script>
